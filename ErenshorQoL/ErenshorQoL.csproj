<Project Sdk="Microsoft.NET.Sdk">

	<!-- Generate Version Based on Date -->
	<Target Name="AssemblyVersion" BeforeTargets="CoreCompile" DependsOnTargets="PrepareForBuild">
		<PropertyGroup>
			<AssemblyInfo>Properties\AssemblyInfo.cs</AssemblyInfo>
			<AssemblyInfoContent>$([System.IO.File]::ReadAllText($(AssemblyInfo)))</AssemblyInfoContent>
			<VersionRegex>(\[\s*assembly\s*:\s*AssemblyVersion\(\s*"(\d+)\.(\d+)\.(\d+)(\.)(\d+)("\)\s*\]))</VersionRegex>
			<FileVersionRegex>(\[\s*assembly\s*:\s*AssemblyFileVersion\(\s*"(\d+)\.(\d+)\.(\d+)(\.)(\d+)("\)\s*\]))</FileVersionRegex>

			<NowTime>$([System.DateTime]::Now.Year)</NowTime>
			<MajorVersion>$([MSBuild]::Subtract($(NowTime), 2024).ToString("0"))</MajorVersion>
			<MinorBuildRevision>$([System.DateTime]::Now.ToString("M.d.hhm"))</MinorBuildRevision>

			<NewAssemblyVersion>[assembly: AssemblyVersion("$(MajorVersion).$(MinorBuildRevision)")]</NewAssemblyVersion>
			<NewAssemblyFileVersion>[assembly: AssemblyFileVersion("$(MajorVersion).$(MinorBuildRevision)")]</NewAssemblyFileVersion>

			<!-- Perform replacements in-memory -->
			<UpdatedContent>$([System.Text.RegularExpressions.Regex]::Replace($(AssemblyInfoContent), $(VersionRegex), $(NewAssemblyVersion)))</UpdatedContent>
			<FinalContent>$([System.Text.RegularExpressions.Regex]::Replace($(UpdatedContent), $(FileVersionRegex), $(NewAssemblyFileVersion)))</FinalContent>
		</PropertyGroup>
		
		<!-- Write Final Content to AssemblyInfo.cs file -->
		<WriteLinesToFile File="$(AssemblyInfo)" Lines="$(FinalContent)" Overwrite="true" />
	</Target>

	<!-- General project properties -->
	<PropertyGroup>
		<!-- Target framework for the project -->
		<TargetFramework>netstandard2.1</TargetFramework>
		<!-- Enable nullable reference types -->
		<Nullable>enable</Nullable>
		<!-- Mod title, author, and version retrieved from the project -->
		<Title>$(ModTitle)</Title>
		<Authors>$(Authors)</Authors>
		<LangVersion>9.0</LangVersion>
		<!-- Path to the AppData folder -->
		<AppDataPath>$([System.Environment]::GetFolderPath(SpecialFolder.ApplicationData))</AppDataPath>
		<Company />
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<!--<ItemGroup>
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="System.Linq" Version="4.3.0" />
	</ItemGroup>-->



	<Choose>
		<When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
			<PropertyGroup>
				<GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Erenshor</GamePath>
				<GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Erenshor/Contents/MacOS</GamePath>
				<CorlibPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\Erenshor_Data\Managed</CorlibPath>
			</PropertyGroup>
		</When>
		<When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
			<PropertyGroup>

				<GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 2382520', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
				<_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
				<GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Erenshor</GamePath>
				<GamePath Condition="!Exists('$(GamePath)') AND Exists('$(ErenshorGamePath)')">$(ErenshorGamePath)</GamePath>
				<GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Erenshor</GamePath>
				<GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Erenshor</GamePath>
				<GamePath Condition="!Exists('$(GamePath)')">D:\SteamLibrary\steamapps\common\Erenshor</GamePath>
				<BepInExPath Condition="!Exists('$(BepInExPath)') AND Exists('$(GamePath)')">$(AppDataPath)\Thunderstore Mod Manager\DataFolder\Erenshor\cache\BepInEx-BepInExPack\5.4.2100\BepInExPack\BepInEx\core</BepInExPath>
				<BepInExPath Condition="!Exists('$(BepInExPath)') AND Exists('$(GamePath)')">$(AppDataPath)\Thunderstore Mod Manager\DataFolder\Erenshor\profiles\Default\BepInEx\core</BepInExPath>
				<BepInExPath Condition="!Exists('$(BepInExPath)') AND Exists('$(GamePath)')">$(GamePath)\BepInEx</BepInExPath>
				<CorlibPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\Erenshor_Data\Managed</CorlibPath>
			</PropertyGroup>
		</When>
	</Choose>

	<ItemGroup>
	  <None Include="..\README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>

	<ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>$(BepInExPath)\0Harmony.dll</HintPath>
	</Reference>
	<Reference Include="BepInEx">
	  <HintPath>$(BepInExPath)\BepInEx.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(CorlibPath)\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(CorlibPath)\Unity.TextMeshPro.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>$(CorlibPath)\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(CorlibPath)\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(CorlibPath)\UnityEngine.UI.dll</HintPath>
    </Reference>
	<Reference Include="UnityEngine.AudioModule">
		<HintPath>$(CorlibPath)\UnityEngine.AudioModule.dll</HintPath>
	</Reference>
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="call &quot;.\Post-build.bat&quot;" />
  </Target>

</Project>
